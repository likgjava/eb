<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<context:component-scan base-package="com.gpcsoft"/>
    <context:annotation-config/> 
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <!-- 注解方式配置支持 --> 
	<bean name="annotationRequest" class="com.gpcsoft.core.springmvc.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer" >
			<bean class="com.gpcsoft.core.springmvc.BindingInitializer"/>
		</property>
	</bean>
    <bean name="simpleController" class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
 
	<bean id="exceptionResolver" class="com.gpcsoft.core.web.handler.FrameSimpleMappingExceptionResolver">
  		<property name="defaultErrorView">
   			<value>jsonView</value>
  		</property>
	 	<property name="exceptionMappings">
	   		<props>
	   			<!--	/exception/showError	 是viewName	--> 	 
				<prop key="java.lang.RuntimeException">/exception/showError</prop>   
	   		</props> 
	  	</property>
 	</bean>
 	<!-- 日志 -->
 	<bean id="beanAuditLogAdviceAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">  
        <property name="patterns">
        <list>
        <value>.*remove.*</value>
        <value>.*create.*</value>
        <value>.*save.*</value>
        <value>.*update.*</value>
        <value>.*audit.*</value>
        </list>
        </property>
        <property name="advice"><ref bean="beanAuditLogAdvice"/></property>
    </bean>
     
    <!-- 工作计划 -->
    <bean id="beanWorkFlowAdviceAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">  
        <property name="patterns">
        <list>
        <value>.*remove.*</value>
        <value>.*create.*</value>
        <value>.*save.*</value>
        <value>.*audit.*</value>
        <value>.*update.*</value>
         <value>.*check.*</value>
         <value>.*finish.*</value>
        </list>
        </property>
        <property name="advice">
        	<ref bean="beanWorkFlowAdvice"/></property>
    </bean>

	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
		<property name="beanNames">   
			<list>
        		<value>*Service*</value>    
        	</list> 
		</property>     
		<property name="interceptorNames">       
			<list>  
				<value>transactionInterceptor</value>  
				<value>methodSecurityInterceptor</value>   
				<!-- 日志      -->
				<value>beanAuditLogAdviceAdvisor</value> 
				<!-- 工作流 --> 
				<value>beanWorkFlowAdviceAdvisor</value>
			</list>    
		</property> 
	</bean> 

	<!-- JNDI DataSource for J2EE environments -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/myapps2"/>-->

	<!--bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
			     <property name="jndiName">
			        <value>jdbc/platform</value>
			     </property>
	</bean-->
		
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${hibernate.connection.driver_class}</value>
		</property>
		<property name="url">
			<value>${hibernate.connection.url}</value>
		</property>
		<property name="username">
			<value>${hibernate.connection.username}</value>
		</property>
		<property name="password">
			<value>${hibernate.connection.password}</value>
		</property>
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<!--配置连接池自动检测重连-->
		<property name="validationQuery" value="select * from dual" />
		<property name="numTestsPerEvictionRun" value="100" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
            <list>
                <value>com.gpcsoft.*</value> 
            </list>
		</property> 
		<!-- 
		<property name="mappingDirectoryLocations">
			<list>
				<value>
					/WEB-INF/hbm
				</value>
			</list>
		</property>
		 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
			</props>
		</property>
		<property name="lobHandler"><ref bean="defaultLobHandle"/></property>
	</bean>

    <bean id="defaultLobHandle"  
	      class="org.springframework.jdbc.support.lob.OracleLobHandler"  
	      lazy-init="true">   
	   <property name="nativeJdbcExtractor">   
	      <ref local="nativeJdbcExtractor" />   
	   </property>   
	</bean>  
	
	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"    lazy-init="true">   
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	

	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor"> 
        <property name="transactionManager" ref="transactionManager"/> 
            <property name="transactionAttributes">
				<props>	
			        <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
					<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
			        <prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="merge*">PROPAGATION_REQUIRED,-Exception</prop>
		            <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
		            <prop key="reset*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="auth*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="edit*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="audit*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="verify*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="copy*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="release*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="export*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="import*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="batch*">PROPAGATION_REQUIRED,-Exception</prop>
			        <prop key="move*">PROPAGATION_REQUIRED,-Exception</prop>
          			<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
          			<prop key="check*">PROPAGATION_REQUIRED,-Exception</prop>
          			<prop key="submit*">PROPAGATION_REQUIRED,-Exception</prop>
          			<prop key="finish*">PROPAGATION_REQUIRED,-Exception</prop>
				</props>
			</property>  
        </bean>

	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">   
		<property name="transactionInterceptor" ref="transactionInterceptor"/>
   </bean> 
	<!-- 工作流   JBPM4配置 
	<bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper" />
  	<bean id="processEngine" factory-bean="springHelper" factory-method="createProcessEngine" />
  	-->
</beans>
